version: '3.8'

services:
  # MongoDB for Track1 & Track2
  mongodb:
    image: mongo:7.0
    container_name: carechat-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: carechat123
      MONGO_INITDB_DATABASE: carechat_unified
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - carechat-network

  # PostgreSQL for Track3
  postgresql:
    image: postgres:15
    container_name: carechat-postgresql
    restart: unless-stopped
    environment:
      POSTGRES_DB: track3_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: carechat123
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./postgresql/init:/docker-entrypoint-initdb.d
    networks:
      - carechat-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: carechat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - carechat-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: carechat-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: your-super-secret-jwt-key-here
      TRACK1_SERVICE_URL: http://track1-service:3001
      TRACK2_SERVICE_URL: http://track2-service:3002
      TRACK3_SERVICE_URL: http://track3-service:3003
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: info
    depends_on:
      - track1-service
      - track2-service
      - track3-service
      - redis
    networks:
      - carechat-network
    volumes:
      - ./logs/gateway:/app/logs

  # Track1 Service (Feedback & Reminders - MongoDB)
  track1-service:
    build:
      context: ./services/track1-service
      dockerfile: Dockerfile
    container_name: carechat-track1
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URL: mongodb://admin:carechat123@mongodb:27017
      MONGODB_DATABASE: carechat_unified
      JWT_SECRET: your-super-secret-jwt-key-here
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      LOG_LEVEL: info
    depends_on:
      - mongodb
    networks:
      - carechat-network
    volumes:
      - ./logs/track1:/app/logs

  # Track2 Service (Chat & AI - MongoDB)
  track2-service:
    build:
      context: ./services/track2-service
      dockerfile: Dockerfile
    container_name: carechat-track2
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGODB_URL: mongodb://admin:carechat123@mongodb:27017
      MONGODB_DATABASE: carechat_unified
      JWT_SECRET: your-super-secret-jwt-key-here
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LOG_LEVEL: info
    depends_on:
      - mongodb
    networks:
      - carechat-network
    volumes:
      - ./logs/track2:/app/logs

  # Track3 Service (Blood Management - PostgreSQL)
  track3-service:
    build:
      context: ./services/track3-service
      dockerfile: Dockerfile
    container_name: carechat-track3
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://postgres:carechat123@postgresql:5432/track3_db
      JWT_SECRET: your-super-secret-jwt-key-here
      LOG_LEVEL: info
    depends_on:
      - postgresql
    networks:
      - carechat-network
    volumes:
      - ./logs/track3:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: carechat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
    networks:
      - carechat-network

  # MongoDB Express (Admin Interface)
  mongo-express:
    image: mongo-express:latest
    container_name: carechat-mongo-admin
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: carechat123
      ME_CONFIG_MONGODB_URL: mongodb://admin:carechat123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - carechat-network

  # pgAdmin (PostgreSQL Admin Interface)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: carechat-pg-admin
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@carechat.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgresql
    networks:
      - carechat-network

volumes:
  mongodb_data:
    driver: local
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  carechat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
