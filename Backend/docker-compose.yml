version: '3.8'

services:
  # FastAPI Backend Service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: carechat_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://carechat_user:carechat_password@db:5432/carechat_db
      - JWT_SECRET_KEY=your_super_secret_jwt_key_here_change_in_production
      - JWT_REFRESH_SECRET_KEY=your_super_secret_refresh_key_here_change_in_production
      - CORS_ORIGINS=["*"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app  # Mount for development (remove in production)
    networks:
      - carechat_network
    restart: unless-stopped

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: carechat_db
    environment:
      - POSTGRES_DB=carechat_db
      - POSTGRES_USER=carechat_user
      - POSTGRES_PASSWORD=carechat_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: Initial SQL script
    networks:
      - carechat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carechat_user -d carechat_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: carechat_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@carechat.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - carechat_network
    restart: unless-stopped
    profiles:
      - admin  # Only start with --profile admin

volumes:
  postgres_data:
    driver: local

networks:
  carechat_network:
    driver: bridge 